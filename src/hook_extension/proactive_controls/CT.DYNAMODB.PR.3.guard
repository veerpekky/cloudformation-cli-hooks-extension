# {{ RULE_HEADER }}

#
# Constants
#
let DYNAMODB_TABLE_TYPE = "AWS::DynamoDB::Table"
let INPUT_DOCUMENT = this

#
# Assignments
#
let dynamodb_tables = Resources.*[ Type == %DYNAMODB_TABLE_TYPE ]

#
# Primary Rules
#
rule dynamodb_table_deletion_protection_enabled_check when is_cfn_template(%INPUT_DOCUMENT)
                                                           %dynamodb_tables not empty {
    check(%dynamodb_tables.Properties)
        <<
        {{ RULE_MESSAGE }}
        >>
}

rule dynamodb_table_deletion_protection_enabled_check when is_cfn_hook(%INPUT_DOCUMENT, %DYNAMODB_TABLE_TYPE) {
    check(%INPUT_DOCUMENT.%DYNAMODB_TABLE_TYPE.resourceProperties)
        <<
        {{ RULE_MESSAGE }}
        >>
}

rule check(dynamodb_table) {
    %dynamodb_table {
        # Scenario 2
        DeletionProtectionEnabled exists
        # Scenarios 3 and 4
        DeletionProtectionEnabled == true
    }
}

#
# Utility Rules
#
rule is_cfn_template(doc) {
    %doc {
        AWSTemplateFormatVersion exists  or
        Resources exists
    }
}

rule is_cfn_hook(doc, DYNAMODB_TABLE_TYPE) {
    %doc.%DYNAMODB_TABLE_TYPE.resourceProperties exists
}